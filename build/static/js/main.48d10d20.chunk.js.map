{"version":3,"sources":["AppContext.js","WatchList/WatchList.js","ListNav/ListNav.js","DashboardList/DashboardList.js","Dashboard/Dashboard.js","LandingPage/LandingPage.js","NavBar/NavBar.js","dummy-store.js","App.js","index.js"],"names":["AppContext","React","createContext","entries","entry","handleAddEntry","removeEntry","watched","className","this","context","map","key","id","title","strmservice","moment","date","format","htmlFor","type","onClick","e","props","handleUnwatchButton","name","Component","contextType","ListNav","entryId","updateScore","unwatchEntry","handleWatchButton","state","score","badges","img","icon","userBadges","points","nextMessage","badgesMessage","newScore","newBadges","filter","b","nextBadges","length","setState","badge","DashboardList","isHidden","showButton","Dashboard","handleSubmit","preventDefault","newEntry","uuid","target","value","console","log","reset","role","onSubmit","placeholder","LandingPage","fields","errors","handleChange","bind","submituserRegistrationForm","submituserLoginForm","validateLoginForm","history","push","validateForm","formIsValid","match","RegExp","test","method","username_login","onChange","password_login","username","emailid","password","NavBar","App","concat","find","setTimeout","dummyStore","Provider","exact","path","component","library","add","faThumbsUp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48d10d20.chunk.js","sourcesContent":["import React from 'react'\n\nconst AppContext = React.createContext({\n    entries: [],\n    entry: '',\n    handleAddEntry: () => {},\n    removeEntry: () => {},\n    watched: [],\n})\n\nexport default AppContext","import React, { Component } from 'react'\nimport AppContext from '../AppContext'\nimport moment from 'moment';\n\nexport default class WatchList extends Component {\n    static contextType = AppContext\n    render() {\n\n        return (\n            <div className=\"WatchedListNav\">\n                <h2>What you've watched</h2>\n                <ul className='WatchedList_list'>\n                    {this.context.watched.map(entry =>\n                        <li className='watchlist_main' key={entry.id}>\n                            {entry.title}{' '}\n                            {entry.strmservice}{' '}\n                            {moment(entry.date).format('MM-DD-YYYY')}\n                            <div>\n                                <label htmlFor=\"unwatch\">unwatch</label>\n                                <input type=\"checkbox\" onClick={e => this.props.handleUnwatchButton(entry.id)} name='checkbox' id='checkbox' />\n                            </div>\n                        </li>)}\n                </ul>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment'\nimport AppContext from '../AppContext'\nimport './ListNav.css'\nimport WatchList from '../WatchList/WatchList'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default class ListNav extends Component {\n    static contextType = AppContext\n    constructor(props) {\n        super(props);\n        this.state = {\n          score: 0,\n          entries: [],\n          badges: [\n            {id: 1, score: 500, name: 'Just getting started', img: <FontAwesomeIcon icon=\"thumbs-up\"></FontAwesomeIcon>},\n            {id: 2, score: 1000, name: 'badge2'},\n            {id: 3, score: 1500, name: 'badge3'},\n            {id: 4, score: 2000, name: 'badge4'}\n          ],\n          userBadges: [],\n        }\n    }\n\n    handleUnwatchButton = (entryId) => {\n        this.updateScore(-100)\n        this.context.unwatchEntry(entryId)\n    }\n\n    handleWatchButton = (entryId) => {\n        this.updateScore(100)\n        this.context.removeEntry(entryId)\n    }\n\n    updateScore(points) {\n        const newScore = this.state.score + points\n        const newBadges = this.state.badges.filter(b => b.score <= newScore)\n        const nextBadges = this.state.badges.filter(b => b.score > newScore)\n        let nextMessage\n        let badgesMessage;\n        if (newBadges.length > this.state.userBadges.length) {\n            badgesMessage = `You got a new badge!: '${newBadges[newBadges.length - 1].name}'` \n        }\n        if (nextBadges.length > 0) {\n            nextMessage = `You need ${nextBadges[0].score - newScore} points til your next badge` \n        }\n        this.setState({\n          score: newScore,\n          userBadges: newBadges,\n          badgesMessage: badgesMessage,\n          nextMessage: nextMessage\n        })\n    }\n    render() {\n        return (\n            <div className=\"DashboardListNav\">\n                <ul className='DashboardList_list'>\n                    <h2 className=\"list__title\">Get to work!</h2>\n                    {this.context.entries.map(entry =>\n                        <li key={entry.id} className=\"watchlist_main\">\n                            {entry.title}{' '}\n                            {entry.strmservice}{' '}\n                            {moment(entry.date).format('MM-DD-YYYY')}\n                            <div>\n                                <label htmlFor=\"watched\">watched</label>\n                                <input type=\"checkbox\" onClick={e => this.handleWatchButton(entry.id)} name='checkbox' id='checkbox' />\n                                <button onClick={e => this.context.removeEntry(entry.id)}>delete</button>\n                            </div>\n                        </li>)}\n                </ul>\n                \n                <section className=\"scoreboard_section\">\n                        <h2 className=\"scoreboard__title\">Scoreboard</h2>\n                    <p>Score: {this.state.score} </p>\n                    <p>{this.state.userBadges.map(badge => (\n                        <li className=\"scoreboard__list\">\n                            {this.state.badgesMessage}{'  '}\n                            {badge.img}\n                        </li>\n                    ))}</p>\n                    <p>{this.state.nextMessage}</p>\n                    \n                    \n                  </section>\n                  {/* <section className=\"watched_list\"> */}\n                  {/* <WatchList \n                    handleUnwatchButton = {this.handleUnwatchButton}\n                    /> */}\n                {/* </section> */}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport AppContext from '../AppContext'\nimport './DashboardList.css'\n\nimport ListNav from '../ListNav/ListNav'\nimport WatchList from '../WatchList/WatchList'\n\nexport default class DashboardList extends Component {\n    static contextType = AppContext\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          isHidden: true,\n          showButton: true,\n        };\n      }\n\n      toggleHidden () {\n        this.setState({\n          isHidden: !this.state.isHidden,\n          showButton: this.state.showButton\n        })\n      }\n\n\n\n\n    render() {\n        return (\n            <div>\n              {/* <button onClick={this.toggleHidden.bind(this)} >\n                Show what you've previously watched\n              </button> */}\n              <ListNav />\n              {/* {!this.state.isHidden && <WatchList /> } */}\n\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Dashboard.css'\nimport {v1 as uuid} from 'uuid'\nimport moment from 'moment';\nimport AppContext from '../AppContext'\nimport DashboardList from '../DashboardList/DashboardList'\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entries: [],\n      entry: '',\n      title: '',\n      strmservice: '',\n    };\n  }\n\nstatic contextType = AppContext\n\n\n\n\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const newEntry = {\n      id: uuid(),\n      title: e.target['title'].value,\n      strmservice: e.target['streaming-service'].value,\n      // date: moment.format('MM-DD-YYYY')\n    }\n    this.context.handleAddEntry(newEntry)\n    console.log(newEntry)\n    e.target.reset()\n    this.setState({\n      title: '',\n      strmservice: '',\n\n    })\n  }\n  \n    render() {\n        return (\n            <main role=\"main\">\n                    \n                    <form onSubmit={this.handleSubmit} className='watch-form'>\n                    <div className=\"form__section\">\n                    <h3 className=\"form__header\">What do you want to watch?</h3>\n                        <div className=\"title_section\">\n                          <label className=\"title_label\" htmlFor=\"title\">Title</label>\n                          <input className=\"title_input\" placeholder='Title' type=\"text\" name='title' id='title' />\n                        </div>\n                        <div>\n                          <label htmlFor=\"streaming-service\">Streaming Service</label>\n                          <select id=\"streaming-service\" name=\"streaming-service\">\n                            <option value=\"netflix\">Netflix</option>\n                            <option value=\"hulu\">Hulu</option>\n                            <option value=\"amazon-prime\">Amazon Prime</option>\n                            <option value=\"hbo\">HBO</option>\n                            <option value=\"showtime\">showtime</option>\n                            <option value=\"other\">other</option>\n                          </select>\n                        </div>\n                        <button className=\"submit_button\" type='submit'>Add to list</button>\n                      </div>\n                    </form>\n\n              <DashboardList />\n            </main>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './LandingPage.css'\n\nexport default class LandingPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fields: {},\n      errors: {},\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n    this.submituserLoginForm = this.submituserLoginForm.bind(this);\n\n  };\n\n  handleChange(e) {\n    let fields = this.state.fields;\n    fields[e.target.name] = e.target.value;\n    this.setState({\n      fields\n    });\n\n  }\n\n\n  submituserLoginForm(e) {\n    e.preventDefault();\n    if (this.validateLoginForm()) {\n        let fields = {};\n    \n        fields[\"username_login\"] = \"\";\n        fields[\"password_login\"] = \"\";\n        this.setState({fields:fields});\n        this.props.history.push('/dashboard')\n    }\n\n  }\n\n  submituserRegistrationForm(e) {\n    e.preventDefault();\n    if (this.validateForm()) {\n        let fields = {};\n        fields[\"username\"] = \"\";\n        fields[\"password\"] = \"\";\n        fields[\"emailid\"] = \"\";\n        this.setState({fields:fields});\n        this.props.history.push('/dashboard')\n    }\n\n  }\n\n  validateLoginForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"username_login\"]) {\n      formIsValid = false;\n      errors[\"username_login\"] = \"*Please enter your username.\";\n    }\n\n    if (typeof fields[\"username_login\"] !== \"undefined\") {\n      if (!fields[\"username_login\"].match(/^[a-zA-Z ]*$/)) {\n        formIsValid = false;\n        errors[\"username_login\"] = \"*Please enter alphabet characters only.\";\n      }\n    }\n\n\n    if (!fields[\"password_login\"]) {\n      formIsValid = false;\n      errors[\"password_login\"] = \"*Please enter your password.\";\n    }\n\n    if (typeof fields[\"password_login\"] !== \"undefined\") {\n      if (!fields[\"password_login\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n        formIsValid = false;\n        errors[\"password_login\"] = \"*Please enter secure and strong password.\";\n      }\n    }\n    this.setState({\n      errors: errors,\n    });\n    return formIsValid;\n  }\n\n  validateForm() {\n\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"username\"]) {\n      formIsValid = false;\n      errors[\"username\"] = \"*Please enter your username.\";\n    }\n\n    if (typeof fields[\"username\"] !== \"undefined\") {\n      if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n        formIsValid = false;\n        errors[\"username\"] = \"*Please enter alphabet characters only.\";\n      }\n    }\n\n    \n    if (!fields[\"emailid\"]) {\n      formIsValid = false;\n      errors[\"emailid\"] = \"*Please enter your email-ID.\";\n    }\n\n    if (typeof fields[\"emailid\"] !== \"undefined\") {\n      //regular expression for email validation\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n      if (!pattern.test(fields[\"emailid\"])) {\n        formIsValid = false;\n        errors[\"emailid\"] = \"*Please enter valid email-ID.\";\n      }\n    }\n\n    if (!fields[\"password\"]) {\n      formIsValid = false;\n      errors[\"password\"] = \"*Please enter your password.\";\n    }\n\n    if (typeof fields[\"password\"] !== \"undefined\") {\n      if (!fields[\"password\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n        formIsValid = false;\n        errors[\"password\"] = \"*Please enter secure and strong password.\";\n      }\n    }\n\n    this.setState({\n      errors: errors,\n    });\n    return formIsValid;\n  }\n\n\n\nrender() {\n  return (\n  <div id=\"main-registration-container\">\n      <header role=\"banner\" className=\"banner\">\n          <h1 className=\"app__title\">QuarenTV</h1>\n          <h4 className=\"app__header\">Let's wash our hands, stay inside, and get to watching. What else are you gonna do?</h4>\n          </header>\n          <section className=\"login_section\">\n               <form id=\"login_form\" method=\"post\"  name=\"userRegistrationForm\"  onSubmit= {this.submituserLoginForm} >\n                <label>Name</label>\n                  <input className=\"login_input\" type=\"text\" name=\"username_login\" value={this.state.fields.username_login} onChange={this.handleChange} />\n                  <div className=\"errorMsg\">{this.state.errors.username_login}</div>\n                  <label>Password</label>\n                  <input className=\"login_input\" type=\"password\" name=\"password_login\" value={this.state.fields.password_login} onChange={this.handleChange} />\n                  <div className=\"errorMsg\">{this.state.errors.password_login}</div>\n                  <button className=\"login_button\">Log In</button>\n                </form>\n            </section>\n              <div id=\"register\">\n                  <h3>Don't have an account? Register for one!</h3>\n                  <form method=\"post\"  name=\"userRegistrationForm\"  onSubmit= {this.submituserRegistrationForm} >\n                  <label>Name</label>\n                  <input type=\"text\" name=\"username\" value={this.state.fields.username} onChange={this.handleChange} />\n                  <div className=\"errorMsg\">{this.state.errors.username}</div>\n                  <label>Email:</label>\n                  <input type=\"text\" name=\"emailid\" value={this.state.fields.emailid} onChange={this.handleChange}  />\n                  <div className=\"errorMsg\">{this.state.errors.emailid}</div>\n                  <label>Password</label>\n                  <input type=\"password\" name=\"password\" value={this.state.fields.password} onChange={this.handleChange} />\n                  <div className=\"errorMsg\">{this.state.errors.password}</div>\n                  <button className=\"register_button\">Register</button>\n                  </form>\n              </div>\n            </div>\n\n    );\n}\n\n\n}\n\n","import React, { Component } from 'react'\nimport './NavBar.css'\nimport WatchList from '../WatchList/WatchList'\n\nexport default class NavBar extends Component {\n    render() {\n        return (\n            <nav>\n                <span className=\"nav__title\">QuarenTV</span>\n                <div className=\"logout_button\">Logout</div>\n            </nav>\n        )\n    }\n}\n","export default {\n    \"entries\": [\n      {\n        \"id\": \"cbc787a0-ffaf-11e8-8eb2-f2801f1b9fd1\",\n        \"title\": \"Unorthodox\",\n        \"date\": \"2019-01-03T00:00:00.000Z\",\n        \"strmservice\": \"Netflix\",\n        \n      },\n      {\n        \"id\": \"d26e0570-ffaf-11e8-8eb2-f2801f1b9fd1\",\n        \"title\": \"Shrill\",\n        \"date\": \"2019-01-04T00:00:00.000Z\",\n        \"strmservice\": \"Hulu\",\n        \n      },\n      {\n        \"id\": \"d26e0854-ffaf-11e8-8eb2-f2801f1b9fd1\",\n        \"title\": \"Pen15\",\n        \"date\": \"2018-08-20T23:00:00.000Z\",\n        \"strmservice\": \"Hulu\",\n        \n      },\n      {\n        \"id\": \"d26e0980-ffaf-11e8-8eb2-f2801f1b9fd1\",\n        \"title\": \"Tiger King\",\n        \"date\": \"2018-03-03T00:00:00.000Z\",\n        \"strmservice\": \"Netflix\",\n        \n      },\n      {\n        \"id\": \"d26e0f48-ffaf-11e8-8eb2-f2801f1b9fd1\",\n        \"title\": \"The Hunters\",\n        \"date\": \"2018-04-26T23:00:00.000Z\",\n        \"strmservice\": \"Amazon Prime\",\n      },\n      {\n        \"id\": \"d26e1074-ffaf-11e8-8eb2-f2801f1b9fd1\",\n        \"title\": \"Last Week Tonight\",\n        \"date\": \"2018-02-05T00:00:00.000Z\",\n        \"strmservice\": \"HBO\",\n        \n      },\n      {\n        \"id\": \"d26e11a0-ffaf-11e8-8eb2-f2801f1b9fd1\",\n        \"title\": \"Sopranos\",\n        \"date\": \"2018-12-01T00:00:00.000Z\",\n        \"strmservice\": \"HBO\",\n        \n      },\n      {\n        \"id\": \"d26e12c2-ffaf-11e8-8eb2-f2801f1b9fd1\",\n        \"title\": \"McMillions\",\n        \"date\": \"2018-09-11T23:00:00.000Z\",\n        \"strmservice\": \"HBO\",\n        \n      },\n      {\n        \"id\": \"d26e1452-ffaf-11e8-8eb2-f2801f1b9fd1\",\n        \"title\": \"The Chi\",\n        \"date\": \"2018-08-13T23:00:00.000Z\",\n        \"strmservice\": \"Showtime\",\n        \n      }\n    ]\n  }\n  ","import React, { Component } from 'react'\nimport AppContext from './AppContext'\nimport Dashboard from './Dashboard/Dashboard'\nimport { Route } from 'react-router-dom';\nimport LandingPage from './LandingPage/LandingPage'\nimport NavBar from './NavBar/NavBar'\nimport dummyStore from './dummy-store';\nimport './App.css'\nimport WatchList from './WatchList/WatchList';\n\nexport default class App extends Component {\n  state = {\n    entries: [],\n    watched: [],\n    entry: '',\n  }\n  componentDidMount() {\n    // fake date loading from API call\n    setTimeout(() => this.setState(dummyStore), 600);\n  }\n  handleAddEntry = entry => {\n    this.setState({\n      entries: [\n        ...this.state.entries,\n        entry\n      ]\n    })\n  }\n\n  removeEntry = (entryId) => {\n    this.setState({\n\n      watched: this.state.watched.concat(this.state.entries.find(entry => entry.id == entryId)),\n      entries: this.state.entries.filter(entry => entry.id !== entryId)\n    })\n  }\n\n  unwatchEntry = (entryId) => {\n    this.setState({\n\n      entries: this.state.entries.concat(this.state.watched.find(entry => entry.id == entryId)),\n      watched: this.state.watched.filter(entry => entry.id !== entryId)\n    })\n  }\n\n  render() {\n    const value = {\n      entries: this.state.entries,\n      entry: this.state.entry,\n      handleAddEntry: this.handleAddEntry,\n      removeEntry: this.removeEntry,\n      watched: this.state.watched,\n      unwatchEntry: this.unwatchEntry,\n    }\n    return (\n      <AppContext.Provider value={value}>\n        <div className=\"main_page\">\n            <Route\n             exact path='/dashboard'\n             component={NavBar}\n            />\n          <main>\n            <Route \n              exact path='/'\n              component={LandingPage}\n            />\n            <Route\n              exact path='/dashboard'\n              component={Dashboard}\n            />\n          </main>\n        </div>\n      </AppContext.Provider>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faThumbsUp)\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}